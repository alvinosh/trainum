// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email     String             @unique
  username  String             @unique
  hash      String
  hashedRt  String?
  exercises ExercisesOnUsers[]
  workouts  WorkoutsOnUsers[]

  @@map("users")
}

model Exercise {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String?
  images      Image[]
  targets     Target[]
  equipment   Equipment[]
  type        String

  sets  Set[]
  users ExercisesOnUsers[]

  @@map("exercises")
}

model ExercisesOnUsers {
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId Int // relation scalar field (used in the `@relation` attribute above)
  user       User     @relation(fields: [userId], references: [id])
  userId     Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())

  @@id([exerciseId, userId])
}

model Workout {
  id Int @id @default(autoincrement())

  sets     Set[]
  date     DateTime          @default(now())
  template Boolean
  users    WorkoutsOnUsers[]
}

model WorkoutsOnUsers {
  workout    Workout  @relation(fields: [workoutId], references: [id])
  workoutId  Int // relation scalar field (used in the `@relation` attribute above)
  user       User     @relation(fields: [userId], references: [id])
  userId     Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())

  @@id([workoutId, userId])
}

model Target {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique

  exercises Exercise[]

  @@map("targets")
}

model Equipment {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique

  exercises Exercise[]

  @@map("equipment")
}

model Image {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  url        String
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId Int

  @@map("images")
}

model Set {
  id Int @id @default(autoincrement())

  date DateTime @default(now())

  exerciseId Int
  exercise   Exercise @relation(fields: [exerciseId], references: [id])

  workoutId Int
  workout   Workout @relation(fields: [workoutId], references: [id])

  weight Int
  reps   Int
  time   Int
  rir    Int
}
